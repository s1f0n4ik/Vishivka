// frontend/src/components/SchemeDetail.jsx
import React, { useState, useEffect, useContext } from 'react';
import { useParams, Link, useNavigate } from 'react-router-dom';
import apiClient from '../api/apiClient';
import AuthContext from '../context/AuthContext';

function SchemeDetail() {
  const { id } = useParams();
  const navigate = useNavigate();
  const { user } = useContext(AuthContext);

  const [scheme, setScheme] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const [comments, setComments] = useState([]);
  const [newComment, setNewComment] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);

  useEffect(() => {
    const fetchSchemeAndComments = async () => {
      try {
        setLoading(true);
        // –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ö–µ–º–µ
        const schemeResponse = await apiClient.get(`/schemes/${id}/`); // <-- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨
        setScheme(schemeResponse.data);
        // –ó–∞–ø—Ä–æ—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è —ç—Ç–æ–π —Å—Ö–µ–º—ã
        const commentsResponse = await apiClient.get(`/schemes/${id}/comments/`); // <-- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, —á—Ç–æ–±—ã –Ω–æ–≤—ã–µ –±—ã–ª–∏ –≤–Ω–∏–∑—É
        setComments(commentsResponse.data.results.sort((a, b) => new Date(a.created_at) - new Date(b.created_at)));

      } catch (err) {
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.');
        console.error(err);
      } finally {
        setLoading(false);
      }
    };

    fetchSchemeAndComments();
  }, [id]);

  const handleFavoriteToggle = async () => {
    // ... (–∫–æ–¥ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç apiClient –∏ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    if (!user) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–ª—è—Ç—å —Å—Ö–µ–º—ã –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.");
      navigate('/login');
      return;
    }

    try {
      await apiClient.post(`/schemes/${id}/favorite/`);
      setScheme(prevScheme => ({
        ...prevScheme,
        is_favorited: !prevScheme.is_favorited,
        favorites_count: prevScheme.is_favorited
          ? prevScheme.favorites_count - 1
          : prevScheme.favorites_count + 1
      }));
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:", err);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
  };

  const handleDelete = async () => {
    // ... (–∫–æ–¥ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç apiClient –∏ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
  };

  const handleCommentSubmit = async (e) => {
    e.preventDefault();
    if (!newComment.trim()) return;

    setIsSubmitting(true);
    try {
      const response = await apiClient.post(`/schemes/${id}/comments/`, { // <-- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨
        text: newComment,
      });
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞
      setComments([...comments, response.data]);
      setNewComment('');
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:", error);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    } finally {
      setIsSubmitting(false);
    }
  };

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ö–µ–º—ã...</p>;
  if (error) return <p>{error}</p>;
  if (!scheme) return <p>–°—Ö–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.</p>;

  // <-- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–í–ï–†–ö–ò –ê–í–¢–û–†–°–¢–í–ê -->
  const isAuthor = user && scheme.author && user.id === scheme.author.id;

  return (
    <div>
        {/* ... (–≤–µ—Å—å –≤–∞—à JSX –æ—Å—Ç–∞–µ—Ç—Å—è –∑–¥–µ—Å—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */}

      {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∞ */}
      {isAuthor && (
        <div style={{ float: 'right', border: '1px solid gray', padding: '10px', marginBottom: '10px' }}>
          <Link to={`/schemes/${id}/edit`}>
            <button>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
          </Link>
          <button onClick={handleDelete} style={{ marginLeft: '10px', backgroundColor: '#f44336', color: 'white' }}>
            –£–¥–∞–ª–∏—Ç—å
          </button>
        </div>
      )}
      <h2>{scheme.title}</h2>

      {/* –ö–Ω–æ–ø–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ */}
      {user && (
          <div style={{ margin: '15px 0' }}>
            <button onClick={handleFavoriteToggle}>
              {scheme.is_favorited ? '‚ù§Ô∏è –£–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ' : 'ü§ç –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'}
            </button>
            <span style={{ marginLeft: '10px' }}>
              –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º —É {scheme.favorites_count} —á–µ–ª.
            </span>
          </div>
      )}

      {/* –î–µ—Ç–∞–ª–∏ —Å—Ö–µ–º—ã */}
      {scheme.main_image && <img src={scheme.main_image} alt={`–ü—Ä–µ–≤—å—é –¥–ª—è ${scheme.title}`} style={{ maxWidth: '400px', height: 'auto' }} />}
      <p><strong>–ê–≤—Ç–æ—Ä:</strong> {scheme.author ? <Link to={`/profile/${scheme.author.username}`}>{scheme.author.username}</Link> : '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
      {/* ... –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ ... */}

      <hr style={{ borderColor: 'var(--border-color)', margin: '30px 0' }}/>

      {/* –°–µ–∫—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ */}
      <div className="comments-section">
            <h3>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ ({comments.length})</h3>

            {user ? (
                <form onSubmit={handleCommentSubmit} className="comment-form">
                    <textarea
                        value={newComment}
                        onChange={(e) => setNewComment(e.target.value)}
                        placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..."
                        required
                        disabled={isSubmitting}
                    />
                    <button type="submit" disabled={isSubmitting} style={{ marginTop: '10px' }}>
                        {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
                    </button>
                </form>
            ) : (
                <p>–ß—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, <Link to="/login">–≤–æ–π–¥–∏—Ç–µ</Link>.</p>
            )}

            <ul className="comment-list">
                {comments.length > 0 ? (
                    comments.map(comment => (
                        <li key={comment.id} className="comment-item">
                            <div className="comment-author-avatar">
                                {comment.author.username.charAt(0)}
                            </div>
                            <div className="comment-content">
                                <div className="comment-header">
                                    <span className="comment-author-name">{comment.author.username}</span>
                                    <span className="comment-date">
                                        {new Date(comment.created_at).toLocaleString('ru-RU', { dateStyle: 'short', timeStyle: 'short' })}
                                    </span>
                                </div>
                                <p className="comment-text">{comment.text}</p>
                            </div>
                        </li>
                    ))
                ) : (
                    <p>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ–∫–∞ –Ω–µ—Ç. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!</p>
                )}
            </ul>
        </div>
    </div>
  );
}

export default SchemeDetail;